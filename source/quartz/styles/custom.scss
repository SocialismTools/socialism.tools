@use "./base.scss";
@use "./variables.scss" as *;

#quartz-body {
    max-width: 1100px;
}

.page {
  & > #quartz-body {
    justify-items: start; // Left-justify all grid items

    @media all and ($desktop) {
      // Make the right column grow instead of being fixed
      grid-template-columns: 250px 1fr auto; // Change the right column to auto
      
      .sidebar.right {
        grid-area: grid-sidebar-left; //put the right sidebar (TOC) on the left
        width: auto; //unset the width
        flex-direction: column; // Revert flex-direction to column
        flex: unset; //remove the flex: 1 that forces the toc to expand.
      }

      .sidebar.left {
        grid-area: grid-sidebar-right; //put the left sidebar (explorer) on the right.
      }
      .center {
        grid-area: grid-center; //put the center content in the middle.
      }
    }

    .center {
      max-width: 500px;
      min-width: unset;
      margin-left: 0; //reset the left margin, since it is no longer needed.
      margin-right: 0; //reset the right margin, since it is no longer needed.
    }

    .sidebar {
      &.right {
        align-items: start; //align the toc to the left
      }
    }
  }

  // Ensure the sidebar can grow
  .sidebar {
    &.right {
      & > .toc > button > svg.fold {
        //targets the svg element in the table of contents button
        stroke-width: 0; // hides the arrow.
      }
    }
    &.left {
      & > .explorer > button > svg.fold {
        //target the explorer svg
        stroke-width: 0;
      }
      //target the explorer list and li
      & > .explorer #explorer-ul li {
        font-family: var(--headerFont); //preserve header font
      }
      .tree-item-contents > svg.fold {
        display: none;
      }
      & > .explorer > h2 {
        font-family: var(--headerFont);
      }
    }
  }
  // Ensure the right sidebar can grow
  & > #quartz-body {
    .sidebar.right {
      @media all and ($desktop) {
        & > .toc {
          height: 100%;
          display: flex;
          flex-direction: column;
          & > #toc-content {
            flex-grow: 1; //makes it fill the available space
            overflow-y: auto; // Allow scrolling within the toc content when needed
          }
        }
      }
    }
  }
  // TOC style
  .toc.desktop-only {
    max-height: unset;
    font-family: var(--headerFont);
    // Override max-height from base.scss
    div:has(> .overflow) {
      max-height: unset;
    }
    & > #toc-content {
      &[aria-expanded="true"] {
        // Selects the #toc-content when it is expanded
        height: 100%; // Ensures the #toc-content fills its container when expanded
        overflow-y: auto; // Allow scrolling within the toc content when needed
      }

      & > ul.overflow {
        max-height: unset; // Remove the max-height to allow expanding
        overflow-y: auto; // Allow scrolling within the list when needed
        padding-bottom: 2rem; // Add padding at the bottom
        li {
          font-size: 0.9em; // make the font smaller
        }
      }
    }
  }
}
